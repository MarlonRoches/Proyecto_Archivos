/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.meia_2020.meia;

import Fase3.Arbol;
import Fase3.Desc_Arbol;
import Fase3.Nodo;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author roche
 */

public class SubirFoto extends javax.swing.JFrame {

    static File archivo;
    /**
     * Creates new form SubirFoto
     */
    public SubirFoto() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cRuta = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Ruta");

        cRuta.setText("jTextField1");
        cRuta.setEnabled(false);

        jButton1.setText("Buscar Imagen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Subir Imagen");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cRuta))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        JFileChooser dialogo = new JFileChooser();
        File fotoGuardada;
        String rutaFoto;
        int valor = dialogo.showOpenDialog(this);
        if(valor == JFileChooser.APPROVE_OPTION){
            //try {
                fotoGuardada = dialogo.getSelectedFile();
                rutaFoto = fotoGuardada.getPath();
                cRuta.setText(rutaFoto);
                //abrirFotografia(dialogo);
           // } catch (IOException ex) {
                //Logger.getLogger(CrearUsuario.class.getName()).log(Level.SEVERE, null, ex);
            //}
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
            
            if (CopiarFoto(cRuta.getText())) 
            {
                var desc = new Desc_Arbol();
                //se pudo copiar, lo metemos al arbol
                if (!new File("C:/MEIA/Desc_Arbol.json").exists()) {
                    new Desc_Arbol().crearBitacora(LoginForm.UsuarioActual.usuario);
                }
                
                if (!new File("C:/MEIA/Desc_Gruposs.json").exists()) {
                    new Arbol().CargarArbol().crearArbol(LoginForm.UsuarioActual.usuario);
                }
                //
               
               SimpleDateFormat formatter= new SimpleDateFormat("yyyy-MM-dd 'at' HH:mm:ss z");
               Date date = new Date(System.currentTimeMillis());
                
               desc = new Desc_Arbol().devolverObjeto();
               var arbol = new Arbol().CargarArbol();
               var nodo = new Nodo();
               
               desc.num_registros++;
               desc.registros_activos++;
               nodo.NoRegistro = (desc.num_registros);
               
               nodo.FechaTransaccion= formatter.format(date); 
               desc.fecha_modificacion = formatter.format(date);
               var fileName = new File(cRuta.getText()).getName();
                       
               nodo.Path = "C:/MEIA/Fotografias/"+fileName;
               nodo.Status = true;
               
               
               nodo.Usuario=LoginForm.UsuarioActual.usuario;
               desc.usuario_modificacion =LoginForm.UsuarioActual.usuario;
               
               
               
               arbol.InsertarNodo(arbol.root, nodo);
               desc.actualizarJson(desc);
               arbol.actualizarJson(arbol);
               
                
                this.setVisible(false);
                var form = new Imagenes();
                form.setVisible(true);

            }
            else
            {
            //no se pudo copiar
            }
            //insertar en el arbol
            
            
        } catch (IOException ex) {
            Logger.getLogger(SubirFoto.class.getName()).log(Level.SEVERE, null, ex);
            
        }
    }//GEN-LAST:event_jButton2ActionPerformed
 public boolean CopiarFoto(String path) throws IOException{
     //archivo = path.getSelectedFile();
     archivo = new File(path);
        if(archivo.getName().endsWith("jpg")||archivo.getName().endsWith("png")){
            try{
            File newPhoto= new File(archivo.toString());
            File dirFoto = new File("C:/MEIA/Fotografias");
                if (!dirFoto.exists()) {
                    dirFoto.mkdir();
                }
                
                if (new File("C:/MEIA/Fotografias/"+archivo.getName()).exists()) 
                {
                    //existe
                    return false;
                }
                else
                {
                    // no existe
                    File copiaPhoto = new File("C:/MEIA/Fotografias/"+archivo.getName());
                    Files.copy(newPhoto.toPath(),copiaPhoto.toPath());
                    return true;
                }
            
            }catch(Exception e){
            return false;
            }
        }
        return false;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SubirFoto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SubirFoto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SubirFoto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SubirFoto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SubirFoto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cRuta;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}

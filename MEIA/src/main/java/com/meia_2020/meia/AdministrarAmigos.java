/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.meia_2020.meia;

import com.meia_2020.meia.models.Friendship;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author misch
 */
public class AdministrarAmigos extends javax.swing.JFrame {
    String fileRoute = "C:/MEIA/lista_amigos.txt";
    /**
     * Creates new form AdministrarAmigos
     * @throws java.io.IOException
     */
    public AdministrarAmigos() throws IOException {
        initComponents();
        LoadLists();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        friendsList = new javax.swing.JList<>();
        BtnAgregarAmigo = new javax.swing.JButton();
        BtnEliminarSolicitud = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Solicitudes de amistad pendientes:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Amigos:");

        requestList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(requestList);

        friendsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(friendsList);

        BtnAgregarAmigo.setText("Agregar solicitud seleccionada");
        BtnAgregarAmigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAgregarAmigoActionPerformed(evt);
            }
        });

        BtnEliminarSolicitud.setText("Eliminar solicitud seleccionada");
        BtnEliminarSolicitud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEliminarSolicitudActionPerformed(evt);
            }
        });

        jButton1.setText("Eliminar amigo seleccionado");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BtnAgregarAmigo, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                    .addComponent(BtnEliminarSolicitud, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BtnAgregarAmigo, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BtnEliminarSolicitud, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoadLists() throws FileNotFoundException, IOException
    {
        if (!new File(fileRoute).exists()) {
            new File(fileRoute).createNewFile();
        }
        if (new File(fileRoute).length() != 0) {
            var friendsDictionary = Friendship.GetMapFromFileRoute(fileRoute);
            var friendshipList = (ArrayList<Friendship>) friendsDictionary.values().stream().filter(f -> f.key.contains(LoginForm.UsuarioActual.usuario) && f.status).collect(Collectors.toList());
            var pendingRequestList = (ArrayList<Friendship>) friendshipList.stream().filter(f -> !f.accepted && f.friend.equals(LoginForm.UsuarioActual.usuario)).collect(Collectors.toList());
            var friends = (ArrayList<Friendship>) friendshipList.stream().filter(f -> f.accepted).collect(Collectors.toList());
            DefaultListModel<String> requestModel = new DefaultListModel<>();
            for(var request : pendingRequestList){
                requestModel.addElement(request.user);
            }
            requestList.setModel(requestModel);
            requestList.repaint();
            requestList.revalidate();
            requestList.setSelectedIndex(-1);
            DefaultListModel<String> friendshipModel = new DefaultListModel<>();
            for(var friendship : friends){
                if (friendship.user.equals(LoginForm.UsuarioActual.usuario)) {
                    friendshipModel.addElement(friendship.friend);
                }
                else{
                    friendshipModel.addElement(friendship.user);
                }
            }
            friendsList.setModel(friendshipModel);
            friendsList.repaint();
            friendsList.revalidate();
            friendsList.setSelectedIndex(-1);
        }
        else{
            JOptionPane.showMessageDialog(null, "AÃºn no existe ninguna solicitud de amistad");
        }
    }
    
    private void BtnAgregarAmigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAgregarAmigoActionPerformed
        // TODO add your handling code here:
        if (requestList.getSelectedIndex() != -1) {
            try {
                var friend = requestList.getSelectedValue();
                var friendsDictionary = Friendship.GetMapFromFileRoute(fileRoute);
                Friendship.AddFriend(friendsDictionary, friend, LoginForm.UsuarioActual.usuario, fileRoute);
                JOptionPane.showMessageDialog(null, "Se ha agregado a " + friend + " como amigo.");
                this.dispose();
            } catch (IOException ex) {
                Logger.getLogger(AdministrarAmigos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Por favor escoja una solicitud para aceptar.");
        }
    }//GEN-LAST:event_BtnAgregarAmigoActionPerformed

    private void BtnEliminarSolicitudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEliminarSolicitudActionPerformed
        // TODO add your handling code here:
        if (requestList.getSelectedIndex() != -1) {
            try {
                var friend = requestList.getSelectedValue();
                var friendsDictionary = Friendship.GetMapFromFileRoute(fileRoute);
                Friendship.DeleteFriend(friendsDictionary, friend, LoginForm.UsuarioActual.usuario, fileRoute);
                JOptionPane.showMessageDialog(null, "Se ha eliminado la solicitud de " + friend + ".");
                this.dispose();
            } catch (IOException ex) {
                Logger.getLogger(AdministrarAmigos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Por favor escoja una solicitud para eliminar.");
        }
    }//GEN-LAST:event_BtnEliminarSolicitudActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (friendsList.getSelectedIndex() != -1) {
            try {
                var friend = friendsList.getSelectedValue();
                var friendsDictionary = Friendship.GetMapFromFileRoute(fileRoute);
                Friendship.DeleteFriend(friendsDictionary, friend, LoginForm.UsuarioActual.usuario, fileRoute);
                JOptionPane.showMessageDialog(null, "Se ha eliminado a " + friend + " como amigo.");
                this.dispose();
            } catch (IOException ex) {
                Logger.getLogger(AdministrarAmigos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Por favor escoja un amigo para eliminar.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdministrarAmigos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdministrarAmigos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdministrarAmigos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdministrarAmigos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new AdministrarAmigos().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(AdministrarAmigos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAgregarAmigo;
    private javax.swing.JButton BtnEliminarSolicitud;
    private javax.swing.JList<String> friendsList;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> requestList;
    // End of variables declaration//GEN-END:variables
}
